AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Type: String
    Default: stats-aggregator

  ExecutionRoleArn:
    Type: String
    Default: arn:aws:iam::117819748843:role/lake-freeze-lambda-role

  DeploymentZone:
    Type: String
    Default: deployment-zone-117819748843

  EmrZone:
    Type: String
    Default: emr-zone-117819748843-us-east-1

  DockerImageUri:
    Type: String
    Default: 117819748843.dkr.ecr.us-east-1.amazonaws.com/emr-serverless:stats-aggregator

  SecurityGroupIds:
    Type: CommaDelimitedList
    Default: sg-00467e8ac3c53cb3f

  SubnetIds:
    Type: CommaDelimitedList
    Default: subnet-0cdc957115446f72d

Resources:
  ETLJobTrigger:
    Type: AWS::Events::Rule
    Properties: 
      # Description: String
      Name: !Sub "${AppName}"
      RoleArn: !Ref ExecutionRoleArn
      ScheduleExpression: "cron(15 21 * * ? *)"
      State: ENABLED
      Targets:
        - Id: ETLStepFunction
          Arn: !GetAtt StepFunctionStateMachine.Arn
          Input: "{\n  \"input\": \"{}\"\n}"
          RetryPolicy:
            MaximumEventAgeInSeconds: 300
            MaximumRetryAttempts: 3
          RoleArn: !Ref ExecutionRoleArn

  EMRServerlessApplication:
    Type: AWS::EMRServerless::Application
    Properties: 
      Name: !Sub "${AppName}"
      Architecture: X86_64
      AutoStartConfiguration: 
        Enabled: true
      AutoStopConfiguration: 
        Enabled: true
        IdleTimeoutMinutes: 1
      MaximumCapacity: 
        Cpu: 20vCPU
        Disk: 500GB
        Memory: 64GB
      ReleaseLabel: "emr-6.15.0"
      Type: Spark
      ImageConfiguration:
        ImageUri: !Ref DockerImageUri
      NetworkConfiguration:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIds

  StepFunctionStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub "${AppName}"
      RoleArn: !Ref ExecutionRoleArn
      Definition: {
            "Comment": !Sub "Runs EMR Serverless job for ${AppName}",
            "StartAt": "StartJobRun",
            "States": {
                "StartJobRun": {
                  "Type": "Task",
                  "End": true,
                  "Parameters": {
                      "Name": !Sub "${AppName}",
                      "ClientToken.$": "States.UUID()",
                      "ApplicationId": !Ref EMRServerlessApplication,
                      "ExecutionRoleArn": !Ref ExecutionRoleArn,
                      "JobDriver": {
                        "SparkSubmit": {
                            "EntryPoint": !Sub "s3://${DeploymentZone}/spark_entrypoint.py",
                            "SparkSubmitParameters": !Sub "
                                --driver-memory 4G 
                                --driver-cores 1
                                --num-executors 1
                                --executor-memory 6G
                                --executor-cores 1
                                --conf spark.dynamicAllocation.enabled=false
                                --conf spark.sql.adaptive.enabled=true
                                --jars https://repo1.maven.org/maven2/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar
                                --packages io.streamnative.connectors:pulsar-spark-connector_2.12:3.4.0.3
                              "
                        }
                      },
                      "ConfigurationOverrides": {
                        "MonitoringConfiguration": {
                          "S3MonitoringConfiguration": {
                            "LogUri": !Sub "s3://${EmrZone}/logging/"
                          }
                        }
                      },
                      "ExecutionTimeoutMinutes": 90
                  },
                  "Resource": "arn:aws:states:::aws-sdk:emrserverless:startJobRun"
                }
            }
        }
