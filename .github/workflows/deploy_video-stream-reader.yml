name: Deploy Video Stream Reader

on:
  push:
    branches: [ "main" ]
    paths:
      - video-stream-reader/**

defaults:
 run:
  working-directory: video-stream-reader/

env:
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "117819748843"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

permissions:
  contents: read

jobs:
  deploy-video-stream-reader-image:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    environment: production
    # container:
    #   image: public.ecr.aws/sam/build-python3.9:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build python package
        run: |
          pip install venv-pack awscli build
          python -m build --sdist ./

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: emr-serverless
          IMAGE_TAG: video-stream-reader
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
         

      - name: Copy Python files to S3 deployment zone
        run: |
          aws s3 cp src/spark_entrypoint.py s3://deployment-zone-${AWS_ACCOUNT_ID}-${AWS_REGION}/

  deploy-video-stream-reader-sam:
    name: Deploy SAM template
    runs-on: ubuntu-latest
    environment: production
    container:
      image: public.ecr.aws/sam/build-python3.9:latest

    steps:
    - name: Checkout
      uses: taiki-e/checkout-action@v1

    - name: SAM build
      run: sam build
      
    - name: SAM deploy
      run: >
        sam deploy 
        --no-fail-on-empty-changeset
        --on-failure DELETE
        --stack-name video-stream-reader
        --region ${AWS_REGION}
        --capabilities CAPABILITY_AUTO_EXPAND
        --s3-bucket deployment-zone-${AWS_ACCOUNT_ID}-${AWS_REGION}
        --s3-prefix ${{ github.event.repository.name }}/video-stream-reader


